{
    "page_content": "Here is the modified document:\n\n\u2022 ois a function that measures the observed cost of running A(\u03b8) on an instance \u03c0 drawn from distribution D, with captime \u03ba \u2208 R (e.g., runtime for solving the instance or cost of the solution found)\n\u2022 mis a statistical population parameter (such as expectation, median, or variance), quantifying the typical performance of the algorithm con\ufb01guration.\nAny parameter setting \u03b8 \u2208 \u0398 is considered a candidate solution to the algorithm con\ufb01guration problem. For each setting \u03b8, O\u03b8 represents the distribution of costs induced by function o, evaluated on instances drawn from D and multiple independent runs for randomized algorithms, using maximum captime \u03ba = \u03bamax. The performance of a candidate solution \u03b8 is defined as\nc(\u03b8) := m(O\u03b8), (1)\nwhere m is the statistical population parameter applied to the cost distribution O\u03b8. An optimal setting, \u03b8\u2217, minimizes c(\u03b8):\n\u03b8\u2217\u2208arg min\n\u03b8\u2208\u0398\nc(\u03b8). (2)\nAn algorithm con\ufb01guration procedure is a method for solving the algorithm con\ufb01guration problem. However, due to the absence of an algebraic representation of o, we cannot compute c in closed form. We denote the sequence of runs executed by a con\ufb01gurator as R =\n((\u03b81,\u03c01,s1,\u03ba1,o1),..., (\u03b8n,\u03c0n,sn,\u03ban,on)). Each run is characterized by five values:\n\u2022 \u03b8i \u2208\u0398 denotes the parameter setting being evaluated;",
    "metadata": {
        "source": "../../data/pdfs\\Hutter et al. - 2009 - ParamILS An Automatic Algorithm Configuration Framework.pdf",
        "chunk_idx": 12
    }
}