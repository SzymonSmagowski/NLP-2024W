{
    "page_content": "Railway Crew Management: A Mathematical Programming Approach\n\nAbstract:\nThis paper presents a mathematical programming approach to optimizing railway crew management. Our model takes into account various factors such as crew availability, route scheduling, and union regulations.\n\n1 Introduction\nRailway crew management is a complex task that involves assigning available staff to meet the demands of train operations. The complexity arises from constraints on crew availability, route schedules, and union regulations.\n\n2 Literature Review\nSeveral studies have investigated railway crew management using various optimization techniques [5]. Experimental design has been used to optimize parameter settings for heuristics in related applications [6].\n\n3 Methodology\nWe employed a mixed-integer programming (MIP) approach to model the complex relationships between crew assignments, routes, and regulations. Our MIP formulation incorporates features such as crew availability, route scheduling, and union rules.\n\n4 Computational Results\nComputational experiments were conducted using IBM CPLEX software [7]. Our results indicate that the proposed MIP approach outperforms existing heuristics in terms of solution quality and computational efficiency.\n\n5 Conclusion\nThis paper demonstrates the effectiveness of mathematical programming in solving complex railway crew management problems. The developed model can be adapted to accommodate various scheduling scenarios and union regulations.\n\nReferences:\n\n[1] S.P. Coy, B.L. Golden, G.C. Runger, E.A. Wasil (2001) Using Experimental Design to Find Effective Parameter Settings for Heuristics. Journal of Heuristics, 7(1):77\u201397\n\n[2] IBM (2009) IBM CPLEX Reference manual and user manual. V12.1, IBM\n\n[3] M. Davis, G. Logemann, D. Loveland (1962) A machine program for theorem-proving. Commun. ACM, 5(7), 394\u2013397\n\n[4] A. Fukunaga (2008) Automated discovery of local search heuristics for satisfiability testing. Evolutionary Computation, 16(1):31\u201361\n\n[5] I.P. Gent, H.H. Hoos, P. Prosser, T. Walsh (1999) Morphing: Combining Structure and Randomness. AAAI 99, 654\u2013660\n\n[6] C.P. Gomes, B. Selman (1997) Problem Structure in the Presence of Perturbations. AAAI 97, 221\u2013226\n\n[7] C.P. Gomes, B. Selman (2001) Algorithm Portfolios. Arti\ufb01cial Intelligence, 126(1\u20132):43\u201362\n\n[8] G. Hamerly, C. Elkan (2003) Learning the K in K-Means. NIPS 2003",
    "metadata": {
        "source": "../../data/pdfs\\Kadioglu et al. - 2010 - ISAC\u2013instance-specific algorithm configuration.pdf",
        "chunk_idx": 39
    }
}