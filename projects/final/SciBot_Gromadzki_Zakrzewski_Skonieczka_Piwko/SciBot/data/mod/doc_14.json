{
    "page_content": "**Revised Scientific Paper**\n\n**Debugging Framework for Supervised Learning Pipelines: A Comprehensive Analysis**\n\n**Introduction**\n\nIn supervised learning, pipelines can be prone to various types of bugs, which can significantly impact model performance and accuracy. To address this issue, we propose a categorization framework for identifying and debugging bugs in standard supervised learning pipelines.\n\n**Model Overview**\n\nThe proposed framework (Figure 1) categorizes bugs into three classes: data contamination, model contamination, and test-time contamination. Each category captures defects that occur at different stages of the pipeline:\n\n* **Data Contamination**: Labeling Errors, Spurious Correlation, Mismatch in preprocessing\n* **Model Contamination**: Reinitialized Weights, Unintentional frozen layers\n* **Test-Time Contamination**: Out-of-distribution data\n\n**Contributions**\n\nOur contributions are twofold:\n\n1. **Bug Categorization Framework**: A structured approach to categorizing bugs based on their source in the supervised learning pipeline.\n2. **Empirical Assessment**: Comprehensive control experiments evaluating feature attribution methods against four types of bugs.\n\n**Empirical Assessment**\n\nWe conducted a thorough evaluation of several feature attribution methods, including those that can identify:\n\n* Spurious correlation artifacts\n* Mislabelled training examples\n* Re-initialized weights\n* Out-of-distribution (OOD) shift\n\n**Insights and Future Work**\n\nOur findings reveal that existing feature attribution methods can effectively identify spurious correlation artifacts but may struggle with other types of bugs. This research highlights the need for more robust debugging techniques and frameworks to ensure reliable model performance.\n\n**Figure 1: Debugging Framework for Standard Supervised Learning Pipeline**\n\nA schematic representation of the standard supervised learning pipeline along with examples of bugs that can occur at each stage, categorized into data contamination, model contamination, and test-time contamination.",
    "metadata": {
        "source": "../../data/pdfs\\JP_2011.05429v1.pdf",
        "chunk_idx": 3
    }
}